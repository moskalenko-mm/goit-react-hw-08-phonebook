{"version":3,"file":"static/js/561.62f492b9.chunk.js","mappings":"2XAiBaA,EAAS,WACpB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,wEACnBA,EAAEC,iBADiB,kBAGXN,GAASO,EAAAA,EAAAA,IAAS,CAAET,KAAAA,EAAMF,MAAAA,EAAOF,SAAAA,KAAac,SAHnC,OAIjBC,EAAAA,GAAAA,QAAc,WACdP,EAAS,aALQ,gDAOjBO,EAAAA,GAAAA,MAAY,kBAPK,yDAAH,sDAWZC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MAAOd,EAAa,EAAbA,KAC9B,UAATA,EACID,EAASe,GACA,aAATd,EACAH,EAAYiB,GACZb,EAAQa,EACb,EAED,OACE,UAAC,IAAD,CACEC,SAAS,QACTC,UAAU,OACVC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,QACRC,gBAAiB,UACjBC,gBAAiB,mDACjBC,eAAgB,QAChBC,iBAAkB,aAXtB,WAcE,SAAC,KAAD,KACA,UAAC,IAAD,CACER,GAAI,CACFC,QAAS,OACTQ,cAAe,SACfP,WAAY,UAJhB,WAOE,SAAC,IAAD,CACEF,GAAI,CACFU,EAAG,EACHC,QAAS,cACTC,OAAQ,kBACRC,MAAO,GACPT,OAAQ,IANZ,UASE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYL,UAAU,KAAKe,QAAQ,KAAKd,GAAI,CAAEe,MAAO,SAArD,SAAgE,aAGhE,UAAC,IAAD,CAAKhB,UAAU,OAAOiB,YAAU,EAACC,SAAU5B,EAAcW,GAAI,CAAEkB,GAAI,GAAnE,WACE,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,aAAa,aACbxC,KAAK,OACLyC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNC,WAAS,EACT5B,GAAI,CAAEe,MAAO,SACbc,SAAUlC,OAGd,SAAC,KAAD,CAAM0B,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACN5C,KAAK,QACLwC,aAAa,QACbM,SAAUlC,OAGd,SAAC,KAAD,CAAM0B,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEE,UAAQ,EACRC,WAAS,EACT1C,KAAK,WACL4C,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHH,aAAa,eACbM,SAAUlC,UAIhB,SAAC,IAAD,CACEmC,KAAK,SACLL,WAAS,EACTX,QAAQ,YACRd,GAAI,CAAEkB,GAAI,EAAGa,GAAI,GAJnB,SAKC,aAGD,SAAC,KAAD,CAAMZ,WAAS,EAAChB,eAAe,WAA/B,UACE,SAAC,KAAD,CAAMkB,MAAI,EAAV,UACE,SAAC,KAAD,CAAMW,UAAU,OAAOC,GAAG,IAA1B,SAA8B,iDAS3C,EAED,W","sources":["pages/SingUp.jsx"],"sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { toast } from 'react-hot-toast';\n\nexport const SignUp = () => {\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await dispatch(register({ name, email, password })).unwrap();\n      toast.success('Welcome');\n      navigate('/contacts');\n    } catch (error) {\n      toast.error('Error Register');\n    }\n  };\n\n  const handleChange = ({ target: { value, name } }) => {\n    name === 'email'\n      ? setEmail(value)\n      : name === 'password'\n      ? setPassword(value)\n      : setName(value);\n  };\n\n  return (\n    <Container\n      maxWidth=\"false\"\n      component=\"main\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundColor: '#1b2845',\n        backgroundImage: 'linear-gradient(315deg, #1b2845 0%, #274060 74%)',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n      }}\n    >\n      <CssBaseline />\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar\n          sx={{\n            m: 1,\n            bgcolor: 'transparent',\n            border: '2px solid white',\n            width: 43,\n            height: 43,\n          }}\n        >\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" sx={{ color: 'white' }}>\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"name\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                autoFocus\n                sx={{ color: 'white' }}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link className=\"link\" to=\"/\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignUp;\n"],"names":["SignUp","useState","password","setPassword","email","setEmail","name","setName","dispatch","useDispatch","navigate","useNavigate","handleSubmit","e","preventDefault","register","unwrap","toast","handleChange","target","value","maxWidth","component","sx","display","alignItems","justifyContent","height","backgroundColor","backgroundImage","backgroundSize","backgroundRepeat","flexDirection","m","bgcolor","border","width","variant","color","noValidate","onSubmit","mt","container","spacing","item","xs","autoComplete","required","fullWidth","id","label","autoFocus","onChange","type","mb","className","to"],"sourceRoot":""}